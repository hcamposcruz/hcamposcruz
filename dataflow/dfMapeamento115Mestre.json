{
	"name": "dfMapeamento115Mestre",
	"properties": {
		"folder": {
			"name": "Conv115"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "arq_Conv115_MestreNF",
						"type": "DatasetReference"
					},
					"name": "EntradaArqMestre"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Arq_Conv115_MestreNF_parquet",
						"type": "DatasetReference"
					},
					"name": "SaidaArqMestre"
				}
			],
			"transformations": [
				{
					"name": "MapeamentoArqMestre"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pNomeArq as string",
				"}",
				"source(output(",
				"          ArquivoMestre as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['','originais']) ~> EntradaArqMestre",
				"EntradaArqMestre derive(CNPJ_CPF = trim(substring(ArquivoMestre, 1, 14)),",
				"          IE = trim(substring(ArquivoMestre, 15, 14)),",
				"          RazaoSocial = trim(substring(ArquivoMestre, 29, 35)),",
				"          UF = trim(substring(ArquivoMestre, 64, 2)),",
				"          Classo_Consumo = trim(substring(ArquivoMestre, 66, 1)),",
				"          Frase_TipoUtilizacao = trim(substring(ArquivoMestre, 67, 1)),",
				"          GrupoTensao = trim(substring(ArquivoMestre, 68, 2)),",
				"          CodIdentificacaoConsumidor_Assinante = trim(substring(ArquivoMestre, 70, 12)),",
				"          DataEmissao = trim(substring(ArquivoMestre, 82, 8)),",
				"          Modelo = trim(substring(ArquivoMestre, 90, 2)),",
				"          Serie = trim(substring(ArquivoMestre, 92, 3)),",
				"          Numero = trim(substring(ArquivoMestre, 95, 9)),",
				"          CodAutenticacaoDigitalDocFiscal = trim(substring(ArquivoMestre, 104, 32)),",
				"          {ValorTotal(2decimais)} = trim(substring(ArquivoMestre, 136, 12)),",
				"          {BC_ICMS(2decimais)} = trim(substring(ArquivoMestre, 148, 12)),",
				"          {ICMSDestacado(2decimais)} = trim(substring(ArquivoMestre, 160, 12)),",
				"          {OperacoesIsentas_ou_naoTributadas(2decimais)} = trim(substring(ArquivoMestre, 172, 12)),",
				"          {OutrosValores(2decimais)} = trim(substring(ArquivoMestre, 184, 12)),",
				"          SituacaoDocumento = trim(substring(ArquivoMestre, 196, 1)),",
				"          AnoMesReferenciaApuracao = trim(substring(ArquivoMestre, 197, 4)),",
				"          ReferenciaItemNF = trim(substring(ArquivoMestre, 201, 9)),",
				"          NroTerminalTelefonico_UnidadeConsumidora = trim(substring(ArquivoMestre, 210, 12)),",
				"          IndicacaoInformacaoCampo1 = trim(substring(ArquivoMestre, 222, 1)),",
				"          TipoCliente = trim(substring(ArquivoMestre, 223, 2)),",
				"          SubclasseConsumo = trim(substring(ArquivoMestre, 225, 2)),",
				"          NroTerminalTefefonicoPrincial = trim(substring(ArquivoMestre, 227, 12)),",
				"          CNPJEmitente = trim(substring(ArquivoMestre, 239, 14)),",
				"          Nro_CodFaturaComercial = trim(substring(ArquivoMestre, 253, 20)),",
				"          ValorTotalFaturaComercial = trim(substring(ArquivoMestre, 273, 12)),",
				"          DataLeituraAnterior = trim(substring(ArquivoMestre, 285, 8)),",
				"          DataLeituraAtual = trim(substring(ArquivoMestre, 293, 8)),",
				"          Brancos1_reservadoparausofuturo = trim(substring(ArquivoMestre, 301, 50)),",
				"          Brancos2_reservadoparausofuturo = trim(substring(ArquivoMestre, 351, 8)),",
				"          InformacoesAdicionais = trim(substring(ArquivoMestre, 359, 30)),",
				"          Brancos3_reservadoparausofuturo = trim(substring(ArquivoMestre, 389, 5)),",
				"          CodigoAutenticacaoDigital = trim(substring(ArquivoMestre, 394, 32)),",
				"          AnoEmissaoNF = trim(substring(ArquivoMestre, 82, 4)),",
				"          MesEmissaoNF = trim(substring(ArquivoMestre, 86, 2)),",
				"          DiaEmissaoNF = trim(substring(ArquivoMestre, 88, 2)),",
				"          UFNF = trim(substring(ArquivoMestre, 64, 2)),",
				"          SerieNF = trim(substring(ArquivoMestre, 92, 3))) ~> MapeamentoArqMestre",
				"MapeamentoArqMestre sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     filePattern:($pNomeArq),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          CNPJ_CPF,",
				"          IE,",
				"          RazaoSocial,",
				"          UF,",
				"          Classo_Consumo,",
				"          Frase_TipoUtilizacao,",
				"          GrupoTensao,",
				"          CodIdentificacaoConsumidor_Assinante,",
				"          DataEmissao,",
				"          Modelo,",
				"          Serie,",
				"          Numero,",
				"          CodAutenticacaoDigitalDocFiscal,",
				"          ValorTotal = {ValorTotal(2decimais)},",
				"          BC_ICMS = {BC_ICMS(2decimais)},",
				"          ICMSDestacado = {ICMSDestacado(2decimais)},",
				"          OperacoesIsentas_ou_naoTributadas = {OperacoesIsentas_ou_naoTributadas(2decimais)},",
				"          OutrosValores = {OutrosValores(2decimais)},",
				"          SituacaoDocumento,",
				"          AnoMesReferenciaApuracao,",
				"          ReferenciaItemNF,",
				"          NroTerminalTelefonico_UnidadeConsumidora,",
				"          IndicacaoInformacaoCampo1,",
				"          TipoCliente,",
				"          SubclasseConsumo,",
				"          NroTerminalTefefonicoPrincial,",
				"          CNPJEmitente,",
				"          Nro_CodFaturaComercial,",
				"          ValorTotalFaturaComercial,",
				"          DataLeituraAnterior,",
				"          DataLeituraAtual,",
				"          Brancos1_reservadoparausofuturo,",
				"          Brancos2_reservadoparausofuturo,",
				"          InformacoesAdicionais,",
				"          Brancos3_reservadoparausofuturo,",
				"          CodigoAutenticacaoDigital,",
				"          AnoEmissaoNF,",
				"          MesEmissaoNF,",
				"          DiaEmissaoNF,",
				"          UFNF,",
				"          SerieNF",
				"     ),",
				"     partitionBy('key',",
				"          0,",
				"          SerieNF,",
				"          UFNF,",
				"          AnoEmissaoNF,",
				"          MesEmissaoNF,",
				"          DiaEmissaoNF",
				"     )) ~> SaidaArqMestre"
			]
		}
	}
}