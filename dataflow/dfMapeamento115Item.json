{
	"name": "dfMapeamento115Item",
	"properties": {
		"folder": {
			"name": "Conv115"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "arq_Conv115_ItemNF",
						"type": "DatasetReference"
					},
					"name": "EntradaArqItem"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Arq_Conv115_ItemNF_parquet",
						"type": "DatasetReference"
					},
					"name": "SaidaArqItem"
				}
			],
			"transformations": [
				{
					"name": "MapeamentoArqItem"
				}
			],
			"scriptLines": [
				"parameters{",
				"     pNomeArq as string",
				"}",
				"source(output(",
				"          ArquivoItem as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     moveFiles: ['','originais']) ~> EntradaArqItem",
				"EntradaArqItem derive(CNPJ_CPF = trim(substring(ArquivoItem, 1, 14)),",
				"          UF = trim(substring(ArquivoItem, 15, 2)),",
				"          Classe_Consumo = trim(substring(ArquivoItem, 17, 1)),",
				"          Fase_TipoUtilizacao = trim(substring(ArquivoItem, 18, 1)),",
				"          GrupoTensao = trim(substring(ArquivoItem, 19, 2)),",
				"          DataEmissao = trim(substring(ArquivoItem, 21, 8)),",
				"          Modelo = trim(substring(ArquivoItem, 29, 2)),",
				"          Serie = trim(substring(ArquivoItem, 31, 3)),",
				"          Numero = trim(substring(ArquivoItem, 34, 9)),",
				"          CFOP = trim(substring(ArquivoItem, 43, 4)),",
				"          NroOrdemItem = trim(substring(ArquivoItem, 47, 3)),",
				"          CodigoItem = trim(substring(ArquivoItem, 50, 10)),",
				"          DescricaoItem = trim(substring(ArquivoItem, 60, 40)),",
				"          CodigoClassificacaoItem = trim(substring(ArquivoItem, 100, 4)),",
				"          Unidade = trim(substring(ArquivoItem, 104, 6)),",
				"          {QtdContratada(3decimais)} = trim(substring(ArquivoItem, 110, 12)),",
				"          {QtdMedida(3decimais)} = trim(substring(ArquivoItem, 122, 12)),",
				"          {Total(2decimais)} = trim(substring(ArquivoItem, 134, 11)),",
				"          {Desconto_Redutores(2decimais)} = trim(substring(ArquivoItem, 145, 11)),",
				"          {AcrescimosDespesasAcessorias(2decimais)} = trim(substring(ArquivoItem, 156, 11)),",
				"          {BC_ICMS(2decimais) } = trim(substring(ArquivoItem, 167, 11)),",
				"          {ICMS(2decimais) } = trim(substring(ArquivoItem, 178, 11)),",
				"          {OperacoesIsentas_ou_nao_tributadas(2decimais) } = trim(substring(ArquivoItem, 189, 11)),",
				"          {OutrosValores(2decimais) } = trim(substring(ArquivoItem, 200, 11)),",
				"          {AliquotadoICMS(2 decimais) } = trim(substring(ArquivoItem, 211, 4)),",
				"          {Situacao } = trim(substring(ArquivoItem, 215, 1)),",
				"          AnoMesReferenciaApuracao = trim(substring(ArquivoItem, 216, 4)),",
				"          {NumeroContrato } = trim(substring(ArquivoItem, 220, 15)),",
				"          {QuantidadeFaturada(3decimais) } = trim(substring(ArquivoItem, 235, 12)),",
				"          {TarifaAplicadaPrecoMedioEfetivo(6decimais) } = trim(substring(ArquivoItem, 247, 11)),",
				"          {AliquotaPISPASEP(4decimais) } = trim(substring(ArquivoItem, 258, 6)),",
				"          {PISPASEP(2decimais) } = trim(substring(ArquivoItem, 264, 11)),",
				"          {AliquotaCOFINS(4decimais) } = trim(substring(ArquivoItem, 275, 6)),",
				"          {COFINS(2decimais) } = trim(substring(ArquivoItem, 281, 11)),",
				"          {IndicadordeDescontoJudicial } = trim(substring(ArquivoItem, 292, 1)),",
				"          {TipoIsencao_ReducaoBaseCalculo } = trim(substring(ArquivoItem, 293, 2)),",
				"          BrancosReservadoparausoFuturo = trim(substring(ArquivoItem, 295, 5)),",
				"          CodigodeAutenticacaoDigital = trim(substring(ArquivoItem, 300, 32)),",
				"          AnoEmissaoNF = trim(substring(ArquivoItem, 21, 4)),",
				"          MesEmissaoNF = trim(substring(ArquivoItem, 25, 2)),",
				"          DiaEmissaoNF = trim(substring(ArquivoItem, 27, 2)),",
				"          UFNF = trim(substring(ArquivoItem, 15, 2)),",
				"          SerieNF = trim(substring(ArquivoItem, 31, 3))) ~> MapeamentoArqItem",
				"MapeamentoArqItem sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     filePattern:($pNomeArq),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          CNPJ_CPF,",
				"          UF,",
				"          Classe_Consumo,",
				"          Fase_TipoUtilizacao,",
				"          GrupoTensao,",
				"          DataEmissao,",
				"          Modelo,",
				"          Serie,",
				"          Numero,",
				"          CFOP,",
				"          NroOrdemItem,",
				"          CodigoItem,",
				"          DescricaoItem,",
				"          CodigoClassificacaoItem,",
				"          Unidade,",
				"          QtdContratada = {QtdContratada(3decimais)},",
				"          QtdMedida = {QtdMedida(3decimais)},",
				"          Total = {Total(2decimais)},",
				"          Desconto_Redutores = {Desconto_Redutores(2decimais)},",
				"          AcrescimosDespesasAcessorias = {AcrescimosDespesasAcessorias(2decimais)},",
				"          BC_ICMS = {BC_ICMS(2decimais) },",
				"          ICMS = {ICMS(2decimais) },",
				"          OperacoesIsentas_ou_nao_tributadas = {OperacoesIsentas_ou_nao_tributadas(2decimais) },",
				"          OutrosValores = {OutrosValores(2decimais) },",
				"          AliquotadoICMS = {AliquotadoICMS(2 decimais) },",
				"          {Situacao },",
				"          AnoMesReferenciaApuracao,",
				"          {NumeroContrato },",
				"          QuantidadeFaturada = {QuantidadeFaturada(3decimais) },",
				"          TarifaAplicadaPrecoMedioEfetivo = {TarifaAplicadaPrecoMedioEfetivo(6decimais) },",
				"          AliquotaPISPASEP = {AliquotaPISPASEP(4decimais) },",
				"          PISPASEP = {PISPASEP(2decimais) },",
				"          AliquotaCOFINS = {AliquotaCOFINS(4decimais) },",
				"          COFINS = {COFINS(2decimais) },",
				"          {IndicadordeDescontoJudicial },",
				"          {TipoIsencao_ReducaoBaseCalculo },",
				"          BrancosReservadoparausoFuturo,",
				"          CodigodeAutenticacaoDigital,",
				"          AnoEmissaoNF,",
				"          MesEmissaoNF,",
				"          DiaEmissaoNF,",
				"          UFNF,",
				"          SerieNF",
				"     ),",
				"     partitionBy('key',",
				"          0,",
				"          SerieNF,",
				"          UFNF,",
				"          AnoEmissaoNF,",
				"          MesEmissaoNF,",
				"          DiaEmissaoNF",
				"     )) ~> SaidaArqItem"
			]
		}
	}
}